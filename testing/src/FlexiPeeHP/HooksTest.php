<?php

namespace Test\FlexiPeeHP;

use FlexiPeeHP\Hooks;
use FlexiPeeHP\Changes;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-05-24 at 14:37:54.
 */
class HooksTest extends FlexiBeeTest
{
    /**
     * @var Hooks
     */
    protected $object;

    /**
     * Changes API enabler/disabler
     * @var Changes
     */
    protected $changes;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Hooks;
    }

    /**
     * @covers FlexiPeeHP\Hooks::register
     */
    public function testRegister()
    {
        $this->changes = new Changes();
        $this->changes->enable();
        $this->object->setDataValue('skipUrlTest', 'true');
        $result        = $this->object->register('http://lms.vyvojar.spoje.net/webhook.php');
        $this->assertEmpty($result);
        $this->object->register('http://lms.vyvojar.spoje.net/webhook.php');
    }

    /**
     * @covers FlexiPeeHP\FlexiBee::getFlexiData
     */
    public function testGetFlexiData()
    {
        $flexidata = $this->object->getFlexiData();
        $this->assertArrayHasKey(0, $flexidata);
        $this->assertArrayHasKey('id', $flexidata[0]);
        /* Zde nefunguje vyhledávání ? 
          $filtrered = $this->object->getFlexiData(null,
          key($flexidata[0])." = ".current($flexidata[0]));
          $this->assertArrayHasKey(0, $filtrered);
          $this->assertArrayHasKey('id', $filtrered[0]);
         */
    }

    /**
     * @covers FlexiPeeHP\Hooks::unregister
     */
    public function testUnregister()
    {
        $hooks = $this->object->getAllFromFlexibee();
        $this->assertTrue($this->object->unregister(current(end($hooks))));
    }

    /**
     * Disable ChangesAPI
     */
    protected function tearDown()
    {
    }
}